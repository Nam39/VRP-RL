actor_net_lr: 0.0001
agent_type: attention
batch_size: 128
beam_width: 10
capacity: 20
critic_net_lr: 0.0001
data_dir: data
decode_len: 16
demand_max: 9
disable_tqdm: True
dropout: 0.1
embedding_dim: 128
entropy_coeff: 0.0
forget_bias: 1.0
gpu: 3
hidden_dim: 128
infer_type: single
input_dim: 3
is_train: False
load_path: 
log_dir: logs/vrp10-2024-01-11_02-30-20
log_interval: 200
mask_glimpses: True
mask_pointer: True
max_grad_norm: 2.0
model_dir: ./test_vrp10
n_cust: 10
n_glimpses: 0
n_nodes: 11
n_process_blocks: 3
n_train: 260000
random_seed: 24601
rnn_layers: 1
save_interval: 10000
stdout_print: True
tanh_exploration: 10.0
task: vrp10
task_name: vrp
test_interval: 200
test_size: 1000
use_tanh: False
# Set random seed to 24601
It took 3.2130229473114014s to build the agent.
Evaluation started ...


Val-Step of greedy: 0

Example test input: [[0.39188915, 0.6204959], [0.74632937, 0.76435804], [0.9796736, 0.39036557], [0.5621101, 0.9073347], [0.543051, 0.103109054], [0.94108874, 0.19921248], [0.27434537, 0.7890164], [0.96881443, 0.85726005], [0.599985, 0.5510349], [0.6892647, 0.5528635], [0.083855, 0.97440565]]

Example test output: [[0.599985, 0.5510349], [0.39188915, 0.6204959], [0.74632937, 0.76435804], [0.083855, 0.97440565], [0.543051, 0.103109054], [0.9796736, 0.39036557], [0.6892647, 0.5528635], [0.96881443, 0.85726005], [0.94108874, 0.19921248], [0.5621101, 0.9073347], [0.27434537, 0.7890164], [0.083855, 0.97440565], [0.083855, 0.97440565], [0.083855, 0.97440565], [0.083855, 0.97440565], [0.083855, 0.97440565]]

Example test reward: 6.256784439086914 - best: 0


Val-Step of greedy: 200

Example test input: [[0.6058568, 0.53007925], [0.68925315, 0.035227347], [0.734899, 0.17283483], [0.012703346, 0.698426], [0.48162925, 0.3391978], [0.8427148, 0.43586048], [0.29212874, 0.099181324], [0.105069965, 0.99974656], [0.26340488, 0.82283366], [0.91978765, 0.46198368], [0.20550367, 0.127117]]

Example test output: [[0.48162925, 0.3391978], [0.8427148, 0.43586048], [0.29212874, 0.099181324], [0.20550367, 0.127117], [0.68925315, 0.035227347], [0.6058568, 0.53007925], [0.26340488, 0.82283366], [0.29212874, 0.099181324], [0.20550367, 0.127117], [0.29212874, 0.099181324], [0.734899, 0.17283483], [0.91978765, 0.46198368], [0.20550367, 0.127117], [0.012703346, 0.698426], [0.20550367, 0.127117], [0.105069965, 0.99974656]]

Example test reward: 7.886810302734375 - best: 0


Val-Step of greedy: 400

Example test input: [[0.8959226, 0.030683525], [0.6541895, 0.69883585], [0.059649196, 0.009528127], [0.41980088, 0.34775963], [0.19322479, 0.47991443], [0.2796731, 0.17223671], [0.9837199, 0.6553442], [0.58734053, 0.096595205], [0.6723099, 0.051894262], [0.99339837, 0.8841111], [0.4006987, 0.6711677]]

Example test output: [[0.58734053, 0.096595205], [0.6723099, 0.051894262], [0.19322479, 0.47991443], [0.4006987, 0.6711677], [0.8959226, 0.030683525], [0.9837199, 0.6553442], [0.19322479, 0.47991443], [0.99339837, 0.8841111], [0.4006987, 0.6711677], [0.059649196, 0.009528127], [0.2796731, 0.17223671], [0.41980088, 0.34775963], [0.6541895, 0.69883585], [0.99339837, 0.8841111], [0.4006987, 0.6711677], [0.4006987, 0.6711677]]

Example test reward: 8.082188606262207 - best: 0


Val-Step of greedy: 600

Example test input: [[0.031288426, 0.7440087], [0.5311111, 0.33018315], [0.06753353, 0.14213505], [0.40617192, 0.6749059], [0.31604534, 0.41690874], [0.18624589, 0.25869754], [0.29678947, 0.19735223], [0.020642905, 0.6612497], [0.23714381, 0.36438575], [0.16111457, 0.32585534], [0.18294136, 0.114591196]]

Example test output: [[0.06753353, 0.14213505], [0.031288426, 0.7440087], [0.020642905, 0.6612497], [0.18294136, 0.114591196], [0.5311111, 0.33018315], [0.31604534, 0.41690874], [0.40617192, 0.6749059], [0.020642905, 0.6612497], [0.18294136, 0.114591196], [0.29678947, 0.19735223], [0.18294136, 0.114591196], [0.18624589, 0.25869754], [0.18294136, 0.114591196], [0.16111457, 0.32585534], [0.18294136, 0.114591196], [0.23714381, 0.36438575]]

Example test reward: 4.657105922698975 - best: 0


Val-Step of greedy: 800

Example test input: [[0.46644995, 0.8612643], [0.34602967, 0.35956678], [0.3967168, 0.5359887], [0.28964517, 0.8892131], [0.41304752, 0.62460494], [0.7513405, 0.9537257], [0.06173477, 0.8089942], [0.16529104, 0.58949727], [0.044075806, 0.7860907], [0.8990508, 0.63531804], [0.089672185, 0.66091925]]

Example test output: [[0.8990508, 0.63531804], [0.16529104, 0.58949727], [0.06173477, 0.8089942], [0.089672185, 0.66091925], [0.34602967, 0.35956678], [0.41304752, 0.62460494], [0.28964517, 0.8892131], [0.46644995, 0.8612643], [0.089672185, 0.66091925], [0.3967168, 0.5359887], [0.46644995, 0.8612643], [0.06173477, 0.8089942], [0.044075806, 0.7860907], [0.7513405, 0.9537257], [0.089672185, 0.66091925], [0.089672185, 0.66091925]]

Example test reward: 6.056652545928955 - best: 0

Validation overall avg_reward: 7.736064434051514
Validation overall reward std: 1.4142730236053467
Finished evaluation with 999 steps in 00:00:08.


Val-Step of beam_search: 0

Example test input: [[0.39188915, 0.6204959], [0.74632937, 0.76435804], [0.9796736, 0.39036557], [0.5621101, 0.9073347], [0.543051, 0.103109054], [0.94108874, 0.19921248], [0.27434537, 0.7890164], [0.96881443, 0.85726005], [0.599985, 0.5510349], [0.6892647, 0.5528635], [0.083855, 0.97440565]]

Example test output: [[0.599985, 0.5510349], [0.39188915, 0.6204959], [0.74632937, 0.76435804], [0.083855, 0.97440565], [0.543051, 0.103109054], [0.94108874, 0.19921248], [0.9796736, 0.39036557], [0.6892647, 0.5528635], [0.96881443, 0.85726005], [0.5621101, 0.9073347], [0.27434537, 0.7890164], [0.083855, 0.97440565], [0.083855, 0.97440565], [0.083855, 0.97440565], [0.083855, 0.97440565], [0.083855, 0.97440565]]

Example test reward: [5.7851076 5.2866116 5.595406  5.884264  6.2608004 6.2567844 6.2034793
 6.0703087 6.074325  6.481422 ] - best: 1


Val-Step of beam_search: 200

Example test input: [[0.6058568, 0.53007925], [0.68925315, 0.035227347], [0.734899, 0.17283483], [0.012703346, 0.698426], [0.48162925, 0.3391978], [0.8427148, 0.43586048], [0.29212874, 0.099181324], [0.105069965, 0.99974656], [0.26340488, 0.82283366], [0.91978765, 0.46198368], [0.20550367, 0.127117]]

Example test output: [[0.48162925, 0.3391978], [0.8427148, 0.43586048], [0.26340488, 0.82283366], [0.20550367, 0.127117], [0.29212874, 0.099181324], [0.68925315, 0.035227347], [0.6058568, 0.53007925], [0.26340488, 0.82283366], [0.20550367, 0.127117], [0.734899, 0.17283483], [0.91978765, 0.46198368], [0.20550367, 0.127117], [0.012703346, 0.698426], [0.20550367, 0.127117], [0.26340488, 0.82283366], [0.20550367, 0.127117]]

Example test reward: [8.719952  9.080488  8.5261345 9.152512  8.886671  9.513048  8.958694
 9.319231  8.719952  9.080488 ] - best: 2


Val-Step of beam_search: 400

Example test input: [[0.8959226, 0.030683525], [0.6541895, 0.69883585], [0.059649196, 0.009528127], [0.41980088, 0.34775963], [0.19322479, 0.47991443], [0.2796731, 0.17223671], [0.9837199, 0.6553442], [0.58734053, 0.096595205], [0.6723099, 0.051894262], [0.99339837, 0.8841111], [0.4006987, 0.6711677]]

Example test output: [[0.58734053, 0.096595205], [0.6723099, 0.051894262], [0.9837199, 0.6553442], [0.4006987, 0.6711677], [0.19322479, 0.47991443], [0.8959226, 0.030683525], [0.99339837, 0.8841111], [0.2796731, 0.17223671], [0.4006987, 0.6711677], [0.059649196, 0.009528127], [0.2796731, 0.17223671], [0.41980088, 0.34775963], [0.9837199, 0.6553442], [0.6541895, 0.69883585], [0.4006987, 0.6711677], [0.4006987, 0.6711677]]

Example test reward: [8.300485 8.732417 8.338994 9.019485 8.361075 9.06204  8.774971 8.365119
 8.408503 7.931411] - best: 9


Val-Step of beam_search: 600

Example test input: [[0.031288426, 0.7440087], [0.5311111, 0.33018315], [0.06753353, 0.14213505], [0.40617192, 0.6749059], [0.31604534, 0.41690874], [0.18624589, 0.25869754], [0.29678947, 0.19735223], [0.020642905, 0.6612497], [0.23714381, 0.36438575], [0.16111457, 0.32585534], [0.18294136, 0.114591196]]

Example test output: [[0.06753353, 0.14213505], [0.031288426, 0.7440087], [0.020642905, 0.6612497], [0.18294136, 0.114591196], [0.31604534, 0.41690874], [0.5311111, 0.33018315], [0.40617192, 0.6749059], [0.020642905, 0.6612497], [0.18294136, 0.114591196], [0.29678947, 0.19735223], [0.16111457, 0.32585534], [0.23714381, 0.36438575], [0.020642905, 0.6612497], [0.18624589, 0.25869754], [0.18294136, 0.114591196], [0.18294136, 0.114591196]]

Example test reward: [4.7836666 4.6199007 4.9596457 4.7958794 5.062769  4.8990026 5.189765
 5.353531  5.4247723 5.261006 ] - best: 1


Val-Step of beam_search: 800

Example test input: [[0.46644995, 0.8612643], [0.34602967, 0.35956678], [0.3967168, 0.5359887], [0.28964517, 0.8892131], [0.41304752, 0.62460494], [0.7513405, 0.9537257], [0.06173477, 0.8089942], [0.16529104, 0.58949727], [0.044075806, 0.7860907], [0.8990508, 0.63531804], [0.089672185, 0.66091925]]

Example test output: [[0.34602967, 0.35956678], [0.16529104, 0.58949727], [0.06173477, 0.8089942], [0.089672185, 0.66091925], [0.8990508, 0.63531804], [0.46644995, 0.8612643], [0.28964517, 0.8892131], [0.089672185, 0.66091925], [0.41304752, 0.62460494], [0.3967168, 0.5359887], [0.044075806, 0.7860907], [0.06173477, 0.8089942], [0.7513405, 0.9537257], [0.089672185, 0.66091925], [0.089672185, 0.66091925], [0.089672185, 0.66091925]]

Example test reward: [5.5231338 5.5244284 6.0814853 5.6265664 6.458035  6.0685554 5.6216927
 5.643735  5.166774  5.188816 ] - best: 8

Validation overall avg_reward: 7.08050012588501
Validation overall reward std: 1.3129304647445679
Finished evaluation with 999 steps in 00:00:11.
##################################################################
Total time is 00:00:20
